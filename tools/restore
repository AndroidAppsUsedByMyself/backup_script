#!/system/bin/sh
MODDIR=${0%/*}
[[ $(id -u) -ne 0 ]] && echo "你是憨批？不給Root用你媽 爬" && exit 1
[[ -z $(echo "$MODDIR" | grep -v 'mt') ]] && echo "草泥馬不解壓縮？用毛線 憨批" && exit 1
[[ ! -d $MODDIR/tools ]] && echo "$MODDIR/tools目錄遺失" && exit 1
md5path="$MODDIR"
tools_path=$MODDIR/tools
. "$tools_path/bin.sh"
Open_apps=$(dumpsys window | grep -w mCurrentFocus | egrep -oh "[^ ]*/[^//}]+" | cut -f 1 -d "/")
#記錄開始時間
starttime1=$(date +"%Y-%m-%d %H:%M:%S")
i=1
txt=$MODDIR/name.txt
[[ ! -e $txt ]] && echo "$txt缺少" && exit 0
r=$(cat "$txt" | grep -v "#" | sed -e '/^$/d' | sed -n '$=')
[[ ! -z $r ]] && h=$r
#顯示執行結果
echo_log() {
	if [[ $? = 0 ]]; then
		echoRgb "$1成功" "0" "1" && result=0
	else
		echoRgb "$1恢複失敗，過世了" "0" "0" && result=1
	fi
}
if [[ ! $(getenforce) = Permissive ]]; then
	setenforce 0 2>/dev/null
	echo_log "selinux關閉"
	if [[ $result = 0 ]]; then
		selinux_result=0 && Sn=1 && echoRgb "使用原目錄安裝程序 關閉selinux"
	else
		selinux_result=1 && echoRgb "selinux無法關閉 使用cp方式安裝"
	fi
else
	selinux_result=0 && echoRgb "使用原目錄安裝程序 關閉selinux"
fi
echoRgb "selinux狀態:$selinux_result" && echoRgb "當前使用的恢復程序:$(appinfo -o ands -pn "$Open_apps" 2>/dev/null)"
bn=37
#開始循環$txt內的資料進行恢複
#cd /data/local/tmp
{
while [[ $i -le $h ]]; do
	#let bn++
	#[[ $bn -ge 37 ]] && bn=31
	echoRgb "恢複第$i個應用 總共$h個 剩下$((h-i))個應用"
	name=$(cat "$txt" | grep -v "#" | sed -e '/^$/d' | sed -n "${i}p" | awk '{print $2}')
	name2=$(cat "$txt" | grep -v "#" | sed -e '/^$/d' | sed -n "${i}p" | awk '{print $1}')
	Backup_folder="$MODDIR/$name2($name)"
	[[ -z $name ]] && echoRgb "警告! name.txt軟件包名獲取失敗，可能修改有問題" "0" "0" && exit 1
	if [[ -n $name && -d $Backup_folder ]]; then
		echoRgb "恢複$name2 ($name)"
		starttime2=$(date +"%Y-%m-%d %H:%M:%S")
		if [[ -z $(Package_names "$name") ]]; then
			case $(find "$Backup_folder" -maxdepth 1 -name "*.apk" -type f | wc -l) in
			1)
				echoRgb "恢復普通apk"
				if [[ $selinux_result = 1 ]]; then
					cp -r "$Backup_folder"/*.apk /data/local/tmp && pm install -r /data/local/tmp/*.apk >/dev/null 2>&1
					echo_log "Apk安裝" && rm -rf /data/local/tmp/*
				else
					pm install -r "$Backup_folder"/*.apk >/dev/null 2>&1
					echo_log "Apk安裝"
				fi
				[[ $result = 0 ]] && echoRgb "Apk恢復無誤" "0" "1" || echoRgb "Apk恢復異常" "0" "0"
				;;
			0)
				echoRgb "你的Apk離家出走了，可能備份後移動過程遺失了 解決辦法手動安裝Apk後再執行恢復腳本" "0" "0"
				;;
			*)
				echoRgb "恢復split apk"
				b=$(pm install-create | grep -E -o '[0-9]+')
				if [[ -e $Backup_folder/nmsl.apk ]]; then
					if [[ $selinux_result = 1 ]]; then
						cp -r "$Backup_folder/nmsl.apk" /data/local/tmp && pm install -r "/data/local/tmp/nmsl.apk" >/dev/null 2>&1
						echo_log "nmsl.apk安裝" && rm -rf /data/local/tmp/*
					else
						pm install -r "$Backup_folder/nmsl.apk" >/dev/null 2>&1
						echo_log "nmsl.apk安裝"
					fi
				fi
				find "$Backup_folder" -maxdepth 1 -name "*.apk" -type f | while read i; do
					ad=$(basename "$i" | grep -v 'nmsl.apk')
					if [[ -n $ad ]]; then
						if [[ $selinux_result = 1 ]]; then
							cp -r "$i" /data/local/tmp && pm install-write "$b" "$ad" "/data/local/tmp/$ad" >/dev/null 2>&1
							echo_log "$(basename "$i")安裝"
						else
							pm install-write "$b" "$ad" "$i" >/dev/null 2>&1
							echo_log "$(basename "$i")安裝"
						fi
					fi
				done
				pm install-commit "$b"
				echo_log "split Apk安裝"
				[[ $selinux_result = 1 ]] && rm -rf /data/local/tmp/*
				;;
			esac
		else
			echoRgb "存在當前系統中略過安裝Apk"
		fi
		zb=$(Package_names "$name")
		if [[ -n $zb ]]; then
			[[ $zb = $name ]] && {
			#停止軟件
			[[ $name != $Open_apps ]] && am force-stop "$name"
			if [[ -e /config/sdcardfs/$name/appid ]]; then
				G=$(cat "/config/sdcardfs/$name/appid")
			else
				G=$(dumpsys package "$name" | awk '/userId=/{print $1}' | sed 's/userId=//g' | head -1)
			fi
			X=/data/user/0/$name
			unset usernd datand obbnd
			find "$Backup_folder" -name "*.tar.zst" -o -name "*.tar.lz4" -type f | xargs ls -rt | while read i; do
				case $(basename "$i") in
				*-user*.tar.zst)
					[[ -z $usernd && -d /data/user/0/$name ]] && rm -rf "/data/user/0/$name" && usernd=1
					pv "$i" | tar -I zstd -xmPpf -
					echo_log "$(basename "$i")解壓縮(user)"
					;;
				*-user*.tar.lz4)
					[[ -z $usernd && -d /data/user/0/$name ]] && rm -rf "/data/user/0/$name" && usernd=1
					pv "$i" | tar xmPpf -
					echo_log "$(basename "$i")解壓縮(user)"
					;;
				*-data*.tar.zst)
					[[ -z $datand && -d /sdcard/Android/data/$name ]] && rm -rf "/sdcard/Android/data/$name" && datand=1
					pv "$i" | tar -I zstd -xmPpf -
					echo_log "$(basename "$i")解壓縮(data)"
					;;
				*-data*.tar.lz4)
					[[ -z $datand && -d /sdcard/Android/data/$name ]] && rm -rf "/sdcard/Android/data/$name" && datand=1
					pv "$i" | tar xmPpf -
					echo_log "$(basename "$i")解壓縮(data)"
					;;
				*-obb*.tar.zst)
					[[ -z $obbnd && -d /sdcard/Android/obb/$name ]] && rm -rf "/sdcard/Android/obb/$name" && obbnd=1
					pv "$i" | tar -I zstd -xmPpf -
					echo_log "$(basename "$i")解壓縮(obb)"
					;;
				*-obb*.tar.lz4)
					[[ -z $obbnd && -d /sdcard/Android/obb/$name ]] && rm -rf "/sdcard/Android/obb/$name" && obbnd=1
					pv "$i" | tar xmPpf -
					echo_log "$(basename "$i")解壓縮(obb)"
					;;
				esac
			done
			if [[ -d $X && -n $G ]]; then
				echoRgb "路徑$X
 權限:$G:$G"
				chown -R "$G:$G" "$X"
				echo_log "數據恢複"
			fi
			}
		else
			echoRgb "Apk沒有安裝無法恢復數據" "0" "0"
		fi
		endtime 2 "恢複" && echoRgb "完成$((i*100/h))%" && echoRgb
	else
		echoRgb "$Backup_folder資料夾遺失，無法恢複" "0" "0"
	fi
	let i++
done
echoRgb "批量恢複完成" && endtime 1 "批量恢複開始到結束"
} &